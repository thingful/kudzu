// Code generated by go-bindata. DO NOT EDIT.
// sources:
// sql/20190204153441_flatten_migrations.down.sql (272B)
// sql/20190204153441_flatten_migrations.up.sql (2.279kB)
// sql/20190207173608_add_unique_serial_to_things.down.sql (59B)
// sql/20190207173608_add_unique_serial_to_things.up.sql (58B)
// sql/20190207230101_thing_uid_nullable.down.sql (51B)
// sql/20190207230101_thing_uid_nullable.up.sql (52B)
// sql/20190207231420_add_location_identifier_to_things.down.sql (53B)
// sql/20190207231420_add_location_identifier_to_things.up.sql (211B)
// sql/20190207233037_thing_timestamp_types.down.sql (327B)
// sql/20190207233037_thing_timestamp_types.up.sql (315B)
// sql/20190208003119_remove_thing_not_nullable.down.sql (119B)
// sql/20190208003119_remove_thing_not_nullable.up.sql (119B)
// sql/20190208010946_add_parrot_id_column_to_user.down.sql (42B)
// sql/20190208010946_add_parrot_id_column_to_user.up.sql (53B)
// sql/20190208140801_prevent_empty_location_id_serial.down.sql (99B)
// sql/20190208140801_prevent_empty_location_id_serial.up.sql (156B)
// sql/20190209231122_add_indexed_at_to_identities.down.sql (48B)
// sql/20190209231122_add_indexed_at_to_identities.up.sql (72B)
// sql/20190214003216_non_nullable_channel_columns.down.sql (105B)
// sql/20190214003216_non_nullable_channel_columns.up.sql (103B)
// sql/20190217011904_thing_uid_not_null.down.sql (52B)
// sql/20190217011904_thing_uid_not_null.up.sql (51B)
// sql/20190311125125_add_location_audit_table.down.sql (45B)
// sql/20190311125125_add_location_audit_table.up.sql (1.004kB)

package migrations

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __20190204153441_flatten_migrationsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\x28\x28\x4d\xca\xc9\x4c\xd6\x4b\xce\x48\xcc\xcb\x4b\xcd\x29\x56\x70\x76\x0c\x76\x76\x74\x71\xb5\xe6\xc2\xa7\x3a\x25\xb1\x24\x31\xbe\x38\xbf\xb4\x28\x39\x95\x48\x1d\x89\x05\x05\x39\x99\xc9\x89\x25\x99\xf9\x79\x44\xea\x28\xc9\xc8\xcc\x4b\x27\x52\x6d\x66\x4a\x6a\x5e\x49\x66\x49\x26\xb1\xae\x29\x2d\x4e\x2d\x2a\xb6\x06\x04\x00\x00\xff\xff\x1d\xb4\x3b\x81\x10\x01\x00\x00")

func _20190204153441_flatten_migrationsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190204153441_flatten_migrationsDownSql,
		"20190204153441_flatten_migrations.down.sql",
	)
}

func _20190204153441_flatten_migrationsDownSql() (*asset, error) {
	bytes, err := _20190204153441_flatten_migrationsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190204153441_flatten_migrations.down.sql", size: 272, mode: os.FileMode(0644), modTime: time.Unix(1549294550, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x14, 0xe3, 0x24, 0x4b, 0x84, 0xd8, 0xf9, 0x7d, 0x10, 0xbe, 0xa9, 0xdd, 0xb9, 0xd6, 0xaa, 0xfe, 0xf1, 0x6f, 0x5a, 0x28, 0x6b, 0xf8, 0x65, 0x5e, 0x8d, 0x7c, 0xd3, 0x24, 0x66, 0x57, 0x4b}}
	return a, nil
}

var __20190204153441_flatten_migrationsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x55\x4d\x6f\x9b\x40\x10\xbd\xfb\x57\xcc\xcd\x20\x45\x55\x5a\xa9\x97\xa4\xaa\x44\xf1\xa4\x46\xb1\x21\x85\x75\x93\xb4\xaa\xd0\x16\x36\xf6\x2a\x78\xd9\xc2\xd2\x24\xfd\xf5\x15\x8b\xcd\x97\x71\x4c\x2f\xe5\xe8\x9d\x37\x9e\x79\xf3\xe6\x8d\xed\xa3\x45\x10\xf0\x8e\xa0\x1b\x38\x9e\x0b\xce\x15\xb8\x1e\x01\xbc\x73\x02\x12\x80\x4c\xe4\x3a\xff\x95\xc0\xad\x43\xe6\x10\xd8\x73\x5c\x5a\x20\xd7\x61\x44\x15\x4d\xd2\xf5\xe5\xe4\x14\x7c\x1d\x65\x2f\x52\xa5\x5d\x7c\xf1\x33\xe1\xd1\xe5\x64\x0f\x26\xd6\xa7\x05\xf6\x81\x3a\xe6\x4d\x91\xb3\x2c\x07\x63\x02\xc0\x63\xa8\xbf\x00\x7d\xc7\x5a\xc0\x8d\xef\x2c\x2d\xff\x1e\xae\xf1\xfe\x6c\x02\x50\xb4\x42\xbe\x5a\xbe\x3d\xb7\x7c\xe3\xdd\xfb\x73\x13\x56\xae\xf3\x65\x85\x3a\xbb\xbb\x5a\x2c\xc0\x9e\xa3\x7d\x0d\x46\x19\xff\xe1\x23\x4c\xa7\x66\x89\x8e\x32\x46\x15\x8b\x43\xaa\x00\x88\xb3\xc4\x80\x58\xcb\x1b\x5d\xb6\xb7\x22\xfa\x17\xf8\xe6\xb9\x08\x33\xbc\xb2\x56\x0b\x62\xb8\xde\xad\x61\x82\xd5\x7e\x9a\x16\x2a\x9a\x9a\x13\x73\x54\x67\x3c\x66\x42\x71\xc5\xd9\x61\x7b\xc7\x1a\x4c\x9f\x04\xcb\xc2\x7d\xa4\xe3\x12\xfc\x8c\x3e\xf8\x78\x85\x3e\xba\x36\x06\xa0\xd9\x32\x78\x6c\x82\xe7\xc2\x0c\x17\x48\x10\x6c\x2b\xb0\xad\x19\x96\x78\x5a\xa8\x4d\x28\xb3\xf4\x37\x8f\x59\xd6\xa1\x48\xbf\x46\x11\xcb\xf3\x50\xa5\x8f\x4c\xc0\xc1\x6b\xc6\x1e\x32\x96\x6f\x76\xcf\xfd\xd7\x36\x79\xff\x87\x3e\xb5\xe1\x62\x3d\x44\xdd\x78\x8d\x40\x5f\x2d\x7d\xa1\x1c\x72\xbe\xff\x46\x72\x1f\x60\x93\x28\xa6\x8a\x86\x45\x96\xbc\xf6\xcf\x65\x5c\x3d\x9f\xa1\xb8\x9a\xf0\x9c\x65\x9c\x26\xa1\x28\xb6\x43\x51\x6f\xcf\xab\xa8\xa4\x9a\x47\xef\x9b\x79\xab\x92\xd6\x1b\x1f\x6d\x47\xaf\x6c\xbb\xdf\x24\x15\xeb\x7f\x84\x3c\xf0\x2c\x57\x61\x4e\xb7\x32\x61\x0d\xa4\x2b\x82\x66\xcc\x55\x5d\x03\x80\x57\x11\x5d\x81\x9d\x42\xec\x55\x06\x86\x48\x9f\x0c\x13\xa8\x02\xc5\xb7\x0c\xfe\xa4\x82\xed\x64\x56\x26\xe5\x22\x66\xcf\xa3\x93\x56\x5b\x90\xa7\x45\x16\xb1\xee\x20\x09\xde\x91\x0e\x23\x85\x8c\x4f\x56\xdb\x59\x8b\x12\x24\x78\xf4\x28\xe8\x96\x75\x99\xd7\xb9\xf7\xed\x4c\xa7\x17\x17\x8a\x3d\xab\x9a\xc3\x42\x26\x29\x8d\x59\x5c\x93\x79\xac\xf8\x91\x5b\x45\xa5\x4c\x78\x44\x15\x4f\xc5\xc1\x6e\x9d\x5c\xa8\x46\x7d\x66\xe3\xb5\x8d\xb0\xa9\x94\xe1\xae\xbf\x8e\x3b\x0f\x84\xb6\xa6\x3d\xc2\x4b\x4e\x4c\xf9\x91\xbd\x84\x1b\x9a\x6f\x86\xaf\x82\x5e\xa6\x28\x95\xac\xa1\xfb\xfb\x8f\x91\x6c\xe9\x95\xae\x04\xd1\x67\x6b\x98\xac\x66\xbc\x63\xee\x93\x8e\x6e\x0e\x54\x21\xb8\x1a\x36\x03\x5d\x87\x7a\x91\x6c\x98\xd8\x91\xdd\x44\x1b\x2a\x04\x4b\x06\x3d\x75\xb8\x1d\xed\xc1\x61\xad\x00\x2d\xd5\x96\x23\x56\x16\x5d\x9e\xd9\x23\xf7\xa8\xc5\x5f\xe9\xb0\x03\xa6\xda\x66\xf8\xf8\x5d\xab\xf8\x33\xea\x72\xce\x7a\x99\xcb\x9b\xf2\x37\x00\x00\xff\xff\xda\x9c\xd2\xa4\xe7\x08\x00\x00")

func _20190204153441_flatten_migrationsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190204153441_flatten_migrationsUpSql,
		"20190204153441_flatten_migrations.up.sql",
	)
}

func _20190204153441_flatten_migrationsUpSql() (*asset, error) {
	bytes, err := _20190204153441_flatten_migrationsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190204153441_flatten_migrations.up.sql", size: 2279, mode: os.FileMode(0644), modTime: time.Unix(1549294530, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5f, 0x84, 0x9c, 0x19, 0xb3, 0xdc, 0x10, 0x14, 0xcf, 0x3a, 0x27, 0x84, 0xa0, 0xa4, 0x4b, 0x19, 0x7, 0xd4, 0xa1, 0xc6, 0x1d, 0xc7, 0xa6, 0x19, 0x29, 0xa1, 0x2b, 0x58, 0x6c, 0xa9, 0x6c, 0x33}}
	return a, nil
}

var __20190207173608_add_unique_serial_to_thingsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x14\xa7\x16\x65\x26\xe6\xc4\xe7\x95\xe6\x2a\xb8\x04\xf9\x07\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x03\x02\x00\x00\xff\xff\x8e\x3f\x8a\x95\x3b\x00\x00\x00")

func _20190207173608_add_unique_serial_to_thingsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207173608_add_unique_serial_to_thingsDownSql,
		"20190207173608_add_unique_serial_to_things.down.sql",
	)
}

func _20190207173608_add_unique_serial_to_thingsDownSql() (*asset, error) {
	bytes, err := _20190207173608_add_unique_serial_to_thingsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207173608_add_unique_serial_to_things.down.sql", size: 59, mode: os.FileMode(0644), modTime: time.Unix(1549634330, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf1, 0xf6, 0x9f, 0x92, 0x3a, 0x85, 0xcb, 0x11, 0x28, 0xb0, 0x3a, 0xd6, 0x28, 0x55, 0xea, 0xf0, 0x3d, 0x28, 0xb7, 0xd5, 0xe2, 0xd6, 0xb3, 0xe7, 0xae, 0xdd, 0x76, 0x9c, 0xc1, 0x34, 0x24, 0xe8}}
	return a, nil
}

var __20190207173608_add_unique_serial_to_thingsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x14\xa7\x16\x65\x26\xe6\xc4\xe7\x95\xe6\x2a\x04\xbb\x86\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x03\x02\x00\x00\xff\xff\xaa\xa6\x98\x21\x3a\x00\x00\x00")

func _20190207173608_add_unique_serial_to_thingsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207173608_add_unique_serial_to_thingsUpSql,
		"20190207173608_add_unique_serial_to_things.up.sql",
	)
}

func _20190207173608_add_unique_serial_to_thingsUpSql() (*asset, error) {
	bytes, err := _20190207173608_add_unique_serial_to_thingsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207173608_add_unique_serial_to_things.up.sql", size: 58, mode: os.FileMode(0644), modTime: time.Unix(1549634321, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0x47, 0xfa, 0x88, 0x8a, 0x39, 0xac, 0x80, 0x25, 0x28, 0x7f, 0x70, 0xec, 0xd, 0xd4, 0x9, 0x1, 0x4e, 0xe9, 0x73, 0x5b, 0x76, 0xc6, 0x17, 0x24, 0x4, 0xdf, 0x7f, 0x85, 0xe, 0xf6, 0x3d}}
	return a, nil
}

var __20190207230101_thing_uid_nullableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x94\x66\xa6\x28\x04\xbb\x86\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x03\x02\x00\x00\xff\xff\x9b\xad\xd1\xd5\x33\x00\x00\x00")

func _20190207230101_thing_uid_nullableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207230101_thing_uid_nullableDownSql,
		"20190207230101_thing_uid_nullable.down.sql",
	)
}

func _20190207230101_thing_uid_nullableDownSql() (*asset, error) {
	bytes, err := _20190207230101_thing_uid_nullableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207230101_thing_uid_nullable.down.sql", size: 51, mode: os.FileMode(0644), modTime: time.Unix(1549580517, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0xa2, 0x7c, 0x32, 0xa8, 0x30, 0x8f, 0x8, 0xba, 0x86, 0xeb, 0x93, 0xf2, 0xcc, 0xb, 0xa4, 0xd0, 0xf7, 0x7d, 0x2d, 0x7d, 0x2d, 0xe7, 0x65, 0x1f, 0x9b, 0x3a, 0x5d, 0x98, 0x5f, 0xed, 0x57}}
	return a, nil
}

var __20190207230101_thing_uid_nullableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x94\x66\xa6\x28\xb8\x04\xf9\x07\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x03\x02\x00\x00\xff\xff\xbf\x76\xa0\xc4\x34\x00\x00\x00")

func _20190207230101_thing_uid_nullableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207230101_thing_uid_nullableUpSql,
		"20190207230101_thing_uid_nullable.up.sql",
	)
}

func _20190207230101_thing_uid_nullableUpSql() (*asset, error) {
	bytes, err := _20190207230101_thing_uid_nullableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207230101_thing_uid_nullable.up.sql", size: 52, mode: os.FileMode(0644), modTime: time.Unix(1549580498, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0x85, 0x8d, 0x8e, 0x48, 0xba, 0x12, 0x76, 0x14, 0xb, 0xc4, 0x52, 0x9f, 0xfd, 0x1b, 0x10, 0x82, 0xec, 0x95, 0x5, 0xfb, 0x5a, 0x60, 0xef, 0x7, 0x36, 0x6f, 0x38, 0xb, 0x72, 0xf4, 0x18}}
	return a, nil
}

var __20190207231420_add_location_identifier_to_thingsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xc9\x4f\x4e\x2c\xc9\xcc\xcf\x8b\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\xb2\x06\x04\x00\x00\xff\xff\x30\xdd\x34\xe3\x35\x00\x00\x00")

func _20190207231420_add_location_identifier_to_thingsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207231420_add_location_identifier_to_thingsDownSql,
		"20190207231420_add_location_identifier_to_things.down.sql",
	)
}

func _20190207231420_add_location_identifier_to_thingsDownSql() (*asset, error) {
	bytes, err := _20190207231420_add_location_identifier_to_thingsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207231420_add_location_identifier_to_things.down.sql", size: 53, mode: os.FileMode(0644), modTime: time.Unix(1549581323, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0xc8, 0x8, 0x76, 0x13, 0x6a, 0x81, 0x97, 0x9a, 0x75, 0x83, 0xe, 0x77, 0x61, 0x69, 0xa6, 0x2e, 0x8d, 0x84, 0x47, 0x2, 0x86, 0x74, 0xd5, 0xb7, 0xfd, 0xbd, 0x1, 0xb4, 0x16, 0xf1, 0xf5}}
	return a, nil
}

var __20190207231420_add_location_identifier_to_thingsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xc9\x4f\x4e\x2c\xc9\xcc\xcf\x8b\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\x52\x08\x71\x8d\x08\x51\x08\xf5\xf3\x0c\x0c\x75\xb5\xe6\xe2\x0a\x0d\x70\x71\x0c\x41\xd2\x1c\xec\x1a\x82\x55\x97\xad\x42\x71\x41\x4e\x66\x49\x7c\x41\x62\x51\x89\x46\x51\x6a\x71\x7e\x69\x51\x72\x6a\x7c\x69\x51\x8e\x8e\x82\xba\xbe\xba\x8e\x82\x85\xa6\x35\x17\x17\x76\xe7\x80\x05\xf1\x38\x08\x64\xa5\x9f\x7f\x88\x82\x5f\xa8\x8f\x8f\x35\x17\x20\x00\x00\xff\xff\x3d\x3c\xc4\x7b\xd3\x00\x00\x00")

func _20190207231420_add_location_identifier_to_thingsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207231420_add_location_identifier_to_thingsUpSql,
		"20190207231420_add_location_identifier_to_things.up.sql",
	)
}

func _20190207231420_add_location_identifier_to_thingsUpSql() (*asset, error) {
	bytes, err := _20190207231420_add_location_identifier_to_thingsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207231420_add_location_identifier_to_things.up.sql", size: 211, mode: os.FileMode(0644), modTime: time.Unix(1549634456, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x75, 0x48, 0xd6, 0x15, 0xd, 0xd7, 0xda, 0x44, 0xd8, 0xd3, 0xa3, 0x48, 0x10, 0x33, 0xec, 0x89, 0x18, 0x20, 0x3f, 0xe0, 0x72, 0x14, 0xef, 0xf3, 0x43, 0x61, 0x8e, 0x58, 0xa9, 0xa4, 0xb9, 0xe5}}
	return a, nil
}

var __20190207233037_thing_timestamp_typesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x94\x16\xa4\x24\x96\xa4\xa6\xc4\x27\x96\x28\x84\x44\x06\xb8\x2a\x84\x78\xfa\xba\x06\x87\x38\xfa\x06\x28\x84\x7b\x86\x78\xf8\x87\x86\x80\x45\x14\xa2\xfc\xfd\x5c\xad\xb9\xb8\x90\xcd\x2b\x2d\x4e\x2d\xc2\x30\x2e\xb9\x28\x95\x4c\xe3\x32\x53\x52\xf3\x4a\x32\x4b\x32\x53\xa9\x68\x66\x62\x41\x41\x4e\x66\x72\x62\x49\x66\x7e\x1e\x45\xa6\x02\x02\x00\x00\xff\xff\xb2\x2b\x27\x75\x47\x01\x00\x00")

func _20190207233037_thing_timestamp_typesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207233037_thing_timestamp_typesDownSql,
		"20190207233037_thing_timestamp_types.down.sql",
	)
}

func _20190207233037_thing_timestamp_typesDownSql() (*asset, error) {
	bytes, err := _20190207233037_thing_timestamp_typesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207233037_thing_timestamp_types.down.sql", size: 327, mode: os.FileMode(0644), modTime: time.Unix(1549582549, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfa, 0xbf, 0x82, 0x26, 0x72, 0x7d, 0x3e, 0x39, 0x3f, 0xde, 0xdf, 0xa2, 0x5b, 0x78, 0xc3, 0x73, 0x6, 0xac, 0xfb, 0x28, 0x43, 0x7b, 0x3a, 0xaa, 0xe9, 0xcd, 0x26, 0x7c, 0xf0, 0x5f, 0xb7, 0x5d}}
	return a, nil
}

var __20190207233037_thing_timestamp_typesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x94\x16\xa4\x24\x96\xa4\xa6\xc4\x27\x96\x28\x84\x44\x06\xb8\x2a\x84\x78\xfa\xba\x06\x87\x38\xfa\x06\x28\x84\x7b\x86\x78\x80\xb9\x0a\x51\xfe\x7e\xae\xd6\x5c\x5c\xc8\x86\x95\x16\xa7\x16\x61\x98\x95\x5c\x94\x4a\x8e\x59\x99\x29\xa9\x79\x25\x99\x25\x99\xa9\xd4\x32\x30\xb1\xa0\x20\x27\x33\x39\xb1\x24\x33\x3f\x8f\x7c\x23\x01\x01\x00\x00\xff\xff\x87\x69\xb5\xc3\x3b\x01\x00\x00")

func _20190207233037_thing_timestamp_typesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190207233037_thing_timestamp_typesUpSql,
		"20190207233037_thing_timestamp_types.up.sql",
	)
}

func _20190207233037_thing_timestamp_typesUpSql() (*asset, error) {
	bytes, err := _20190207233037_thing_timestamp_typesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190207233037_thing_timestamp_types.up.sql", size: 315, mode: os.FileMode(0644), modTime: time.Unix(1549582529, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0xad, 0x35, 0xae, 0x8, 0xf4, 0x35, 0x55, 0xe2, 0xe1, 0x1, 0xcc, 0xca, 0xc1, 0x62, 0x7a, 0x2b, 0x19, 0x7d, 0xc2, 0xb2, 0x75, 0x31, 0xe9, 0xa2, 0x71, 0x27, 0xc7, 0x9e, 0xc9, 0x50, 0x4d}}
	return a, nil
}

var __20190208003119_remove_thing_not_nullableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\xe4\x97\xe7\xa5\x16\xc5\x67\xa6\x28\xb8\x04\xf9\x07\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x73\x71\x11\xd6\x5a\x94\x5a\x9c\x5f\x5a\x94\x9c\x1a\x5f\x5a\x94\xa3\x10\xec\x1a\x82\xd0\x0d\x08\x00\x00\xff\xff\x0a\x34\x68\x05\x77\x00\x00\x00")

func _20190208003119_remove_thing_not_nullableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190208003119_remove_thing_not_nullableDownSql,
		"20190208003119_remove_thing_not_nullable.down.sql",
	)
}

func _20190208003119_remove_thing_not_nullableDownSql() (*asset, error) {
	bytes, err := _20190208003119_remove_thing_not_nullableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190208003119_remove_thing_not_nullable.down.sql", size: 119, mode: os.FileMode(0644), modTime: time.Unix(1551372279, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0x9, 0x4d, 0xd, 0x9d, 0xaa, 0x67, 0xf1, 0x82, 0x94, 0x49, 0x3, 0x55, 0x6, 0xde, 0x1a, 0x5a, 0x55, 0x12, 0x47, 0x6a, 0x99, 0xf2, 0xf4, 0x21, 0xdf, 0xc2, 0xec, 0xa4, 0xd, 0xf1, 0xa6}}
	return a, nil
}

var __20190208003119_remove_thing_not_nullableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\xe4\x97\xe7\xa5\x16\xc5\x67\xa6\x28\x04\xbb\x86\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x73\x71\x11\xd6\x59\x94\x5a\x9c\x5f\x5a\x94\x9c\x1a\x5f\x5a\x94\xa3\xe0\x12\xe4\x1f\x80\xd0\x0e\x08\x00\x00\xff\xff\x33\xb6\xec\xb7\x77\x00\x00\x00")

func _20190208003119_remove_thing_not_nullableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190208003119_remove_thing_not_nullableUpSql,
		"20190208003119_remove_thing_not_nullable.up.sql",
	)
}

func _20190208003119_remove_thing_not_nullableUpSql() (*asset, error) {
	bytes, err := _20190208003119_remove_thing_not_nullableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190208003119_remove_thing_not_nullable.up.sql", size: 119, mode: os.FileMode(0644), modTime: time.Unix(1551372297, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0xe6, 0xbf, 0x2f, 0x52, 0xa7, 0x94, 0xc5, 0xea, 0x2f, 0xed, 0x32, 0xe8, 0x17, 0x17, 0xef, 0xed, 0xa2, 0x9a, 0xd3, 0x5c, 0x73, 0x2b, 0x28, 0x72, 0x5, 0xa5, 0x89, 0xc, 0x47, 0x3c, 0x70}}
	return a, nil
}

var __20190208010946_add_parrot_id_column_to_userDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xe6\x52\x50\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x28\x48\x2c\x2a\xca\x2f\x89\xcf\x4c\xb1\x06\x04\x00\x00\xff\xff\x58\xa7\x24\x6e\x2a\x00\x00\x00")

func _20190208010946_add_parrot_id_column_to_userDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190208010946_add_parrot_id_column_to_userDownSql,
		"20190208010946_add_parrot_id_column_to_user.down.sql",
	)
}

func _20190208010946_add_parrot_id_column_to_userDownSql() (*asset, error) {
	bytes, err := _20190208010946_add_parrot_id_column_to_userDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190208010946_add_parrot_id_column_to_user.down.sql", size: 42, mode: os.FileMode(0644), modTime: time.Unix(1549588436, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x29, 0x8c, 0x56, 0x86, 0x26, 0x76, 0xac, 0xb7, 0x82, 0x52, 0x94, 0x5d, 0x67, 0x6d, 0xe3, 0xd4, 0x4b, 0xf7, 0xb1, 0x37, 0x5b, 0x89, 0xf1, 0x30, 0xfd, 0xb2, 0xed, 0x94, 0x70, 0xbc, 0xee, 0xdc}}
	return a, nil
}

var __20190208010946_add_parrot_id_column_to_userUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xe6\x52\x50\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x28\x48\x2c\x2a\xca\x2f\x89\xcf\x4c\x51\x08\x71\x8d\x08\x51\x08\xf5\xf3\x0c\x0c\x75\xb5\x06\x04\x00\x00\xff\xff\x25\x16\x42\x94\x35\x00\x00\x00")

func _20190208010946_add_parrot_id_column_to_userUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190208010946_add_parrot_id_column_to_userUpSql,
		"20190208010946_add_parrot_id_column_to_user.up.sql",
	)
}

func _20190208010946_add_parrot_id_column_to_userUpSql() (*asset, error) {
	bytes, err := _20190208010946_add_parrot_id_column_to_userUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190208010946_add_parrot_id_column_to_user.up.sql", size: 53, mode: os.FileMode(0644), modTime: time.Unix(1549588419, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x78, 0x2f, 0xd0, 0x12, 0xac, 0xe4, 0xa7, 0x9f, 0xf0, 0xea, 0xfd, 0xcd, 0x3, 0x4, 0xbf, 0xdc, 0x3d, 0x9e, 0x39, 0x9b, 0xe3, 0xe4, 0xf8, 0x7a, 0xfb, 0xba, 0xf2, 0xad, 0x63, 0x95, 0x72, 0xd9}}
	return a, nil
}

var __20190208140801_prevent_empty_location_id_serialDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x51\xc8\xc9\x4f\x4e\x2c\xc9\xcc\xcf\x8b\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\x8a\x4f\xce\x48\x4d\xce\xd6\xc1\xa2\xb8\x38\xb5\x28\x33\x31\x27\x3e\xaf\x34\x17\xa2\xc6\x1a\x10\x00\x00\xff\xff\x28\x03\xd3\x41\x63\x00\x00\x00")

func _20190208140801_prevent_empty_location_id_serialDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190208140801_prevent_empty_location_id_serialDownSql,
		"20190208140801_prevent_empty_location_id_serial.down.sql",
	)
}

func _20190208140801_prevent_empty_location_id_serialDownSql() (*asset, error) {
	bytes, err := _20190208140801_prevent_empty_location_id_serialDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190208140801_prevent_empty_location_id_serial.down.sql", size: 99, mode: os.FileMode(0644), modTime: time.Unix(1549635070, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x56, 0x6c, 0x55, 0xe3, 0xcf, 0x7f, 0x2d, 0x7a, 0x61, 0x84, 0x7d, 0xe7, 0x58, 0xa3, 0xed, 0x7, 0xc0, 0xa8, 0xa3, 0xcb, 0xe0, 0x96, 0x5a, 0xb2, 0x9e, 0x0, 0xd0, 0x12, 0xeb, 0x96, 0xda, 0xe9}}
	return a, nil
}

var __20190208140801_prevent_empty_location_id_serialUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x70\x74\x71\x51\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x51\xc8\xc9\x4f\x4e\x2c\xc9\xcc\xcf\x8b\xcf\x4c\x49\xcd\x2b\xc9\x4c\xcb\x4c\x2d\x8a\x4f\xce\x48\x4d\xce\x56\x70\xf6\x70\x75\xf6\x56\xd0\xc0\xa2\x40\xc1\xc6\x4e\x41\x5d\x5d\x53\x07\xd3\xb4\xe2\xd4\xa2\xcc\xc4\x9c\xf8\xbc\xd2\x5c\x54\x43\x10\xe2\x50\xbd\xd6\x80\x00\x00\x00\xff\xff\x4c\xa1\xc6\x83\x9c\x00\x00\x00")

func _20190208140801_prevent_empty_location_id_serialUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190208140801_prevent_empty_location_id_serialUpSql,
		"20190208140801_prevent_empty_location_id_serial.up.sql",
	)
}

func _20190208140801_prevent_empty_location_id_serialUpSql() (*asset, error) {
	bytes, err := _20190208140801_prevent_empty_location_id_serialUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190208140801_prevent_empty_location_id_serial.up.sql", size: 156, mode: os.FileMode(0644), modTime: time.Unix(1549635044, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0x2d, 0x57, 0x4f, 0x47, 0xac, 0x9a, 0x4d, 0x88, 0x15, 0x21, 0x1e, 0x62, 0xa0, 0x37, 0xb, 0x53, 0xa9, 0xd3, 0xad, 0x99, 0x26, 0x71, 0x56, 0x71, 0x66, 0x89, 0xed, 0x17, 0xba, 0x9e, 0xb9}}
	return a, nil
}

var __20190209231122_add_indexed_at_to_identitiesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4c\x49\xcd\x2b\xc9\x2c\xc9\x4c\x2d\xe6\x52\x50\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcc\x4b\x49\xad\x48\x4d\x89\x4f\x2c\xb1\x06\x04\x00\x00\xff\xff\x9e\x6a\x33\xa0\x30\x00\x00\x00")

func _20190209231122_add_indexed_at_to_identitiesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190209231122_add_indexed_at_to_identitiesDownSql,
		"20190209231122_add_indexed_at_to_identities.down.sql",
	)
}

func _20190209231122_add_indexed_at_to_identitiesDownSql() (*asset, error) {
	bytes, err := _20190209231122_add_indexed_at_to_identitiesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190209231122_add_indexed_at_to_identities.down.sql", size: 48, mode: os.FileMode(0644), modTime: time.Unix(1549753964, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8e, 0x99, 0xbc, 0xad, 0xcb, 0xee, 0x86, 0xb2, 0xa6, 0xaf, 0x9d, 0xeb, 0x84, 0xc3, 0xf2, 0x31, 0xf4, 0xd8, 0x64, 0x29, 0x69, 0xfd, 0x38, 0xb5, 0x3d, 0x41, 0x79, 0x14, 0x93, 0xcf, 0x8a, 0x37}}
	return a, nil
}

var __20190209231122_add_indexed_at_to_identitiesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\x4c\x49\xcd\x2b\xc9\x2c\xc9\x4c\x2d\xe6\x52\x50\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcc\x4b\x49\xad\x48\x4d\x89\x4f\x2c\x51\x08\xf1\xf4\x75\x0d\x0e\x71\xf4\x0d\x50\x08\xf7\x0c\xf1\x00\x73\x15\xa2\xfc\xfd\x5c\xad\x01\x01\x00\x00\xff\xff\x67\xa2\xaa\x74\x48\x00\x00\x00")

func _20190209231122_add_indexed_at_to_identitiesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190209231122_add_indexed_at_to_identitiesUpSql,
		"20190209231122_add_indexed_at_to_identities.up.sql",
	)
}

func _20190209231122_add_indexed_at_to_identitiesUpSql() (*asset, error) {
	bytes, err := _20190209231122_add_indexed_at_to_identitiesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190209231122_add_indexed_at_to_identities.up.sql", size: 72, mode: os.FileMode(0644), modTime: time.Unix(1549753943, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0x4d, 0x84, 0x87, 0xd6, 0xf2, 0xbd, 0x83, 0xa3, 0x88, 0x29, 0x94, 0x42, 0xb6, 0x83, 0x8d, 0x9, 0xc5, 0xa8, 0x96, 0x1a, 0x17, 0xb7, 0x5b, 0x81, 0xc, 0x55, 0x41, 0xed, 0xc8, 0xe1, 0x82}}
	return a, nil
}

var __20190214003216_non_nullable_channel_columnsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xce\x48\xcc\xcb\x4b\xcd\x29\xe6\x52\x50\x80\x08\x3b\xfb\xfb\x84\xfa\xfa\x29\x94\x64\x64\xe6\xa5\xc7\x97\x66\xa6\x28\xb8\x04\xf9\x07\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\xa0\xab\x4b\x49\x2c\x49\x8c\x2f\xce\x2f\x2d\x4a\x4e\x8d\x47\x57\x6c\x0d\x08\x00\x00\xff\xff\x07\xd9\x44\xa4\x69\x00\x00\x00")

func _20190214003216_non_nullable_channel_columnsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190214003216_non_nullable_channel_columnsDownSql,
		"20190214003216_non_nullable_channel_columns.down.sql",
	)
}

func _20190214003216_non_nullable_channel_columnsDownSql() (*asset, error) {
	bytes, err := _20190214003216_non_nullable_channel_columnsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190214003216_non_nullable_channel_columns.down.sql", size: 105, mode: os.FileMode(0644), modTime: time.Unix(1550104424, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd9, 0x3a, 0x26, 0x42, 0x89, 0x3e, 0xa3, 0x81, 0x67, 0x89, 0x95, 0x31, 0xc3, 0x8d, 0x87, 0x50, 0x17, 0xd, 0x6, 0xd5, 0xa5, 0xad, 0x58, 0x65, 0x68, 0xc7, 0xb5, 0x66, 0xe, 0xee, 0x16, 0x59}}
	return a, nil
}

var __20190214003216_non_nullable_channel_columnsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xce\x48\xcc\xcb\x4b\xcd\x29\xe6\x52\x50\x80\x08\x3b\xfb\xfb\x84\xfa\xfa\x29\x94\x64\x64\xe6\xa5\xc7\x97\x66\xa6\x28\x04\xbb\x86\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\xe8\xa0\x2b\x4b\x49\x2c\x49\x8c\x2f\xce\x2f\x2d\x4a\x4e\x8d\x47\x53\x6b\x0d\x08\x00\x00\xff\xff\x16\x3d\xcb\x91\x67\x00\x00\x00")

func _20190214003216_non_nullable_channel_columnsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190214003216_non_nullable_channel_columnsUpSql,
		"20190214003216_non_nullable_channel_columns.up.sql",
	)
}

func _20190214003216_non_nullable_channel_columnsUpSql() (*asset, error) {
	bytes, err := _20190214003216_non_nullable_channel_columnsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190214003216_non_nullable_channel_columns.up.sql", size: 103, mode: os.FileMode(0644), modTime: time.Unix(1550104432, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdb, 0xe8, 0xb5, 0x12, 0xa7, 0xe0, 0xeb, 0x65, 0x76, 0xef, 0x17, 0x86, 0x85, 0x30, 0x53, 0x5a, 0x79, 0xdc, 0xc9, 0x91, 0x1e, 0x73, 0xb0, 0x7d, 0x0, 0x12, 0xdb, 0x16, 0x49, 0x18, 0xcc, 0xc9}}
	return a, nil
}

var __20190217011904_thing_uid_not_nullDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x94\x66\xa6\x28\xb8\x04\xf9\x07\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x03\x02\x00\x00\xff\xff\xbf\x76\xa0\xc4\x34\x00\x00\x00")

func _20190217011904_thing_uid_not_nullDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190217011904_thing_uid_not_nullDownSql,
		"20190217011904_thing_uid_not_null.down.sql",
	)
}

func _20190217011904_thing_uid_not_nullDownSql() (*asset, error) {
	bytes, err := _20190217011904_thing_uid_not_nullDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190217011904_thing_uid_not_null.down.sql", size: 52, mode: os.FileMode(0644), modTime: time.Unix(1550366399, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0x85, 0x8d, 0x8e, 0x48, 0xba, 0x12, 0x76, 0x14, 0xb, 0xc4, 0x52, 0x9f, 0xfd, 0x1b, 0x10, 0x82, 0xec, 0x95, 0x5, 0xfb, 0x5a, 0x60, 0xef, 0x7, 0x36, 0x6f, 0x38, 0xb, 0x72, 0xf4, 0x18}}
	return a, nil
}

var __20190217011904_thing_uid_not_nullUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xc9\xc8\xcc\x4b\x2f\xe6\x52\x50\x80\x08\x3a\xfb\xfb\x84\xfa\xfa\x29\x94\x66\xa6\x28\x04\xbb\x86\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x03\x02\x00\x00\xff\xff\x9b\xad\xd1\xd5\x33\x00\x00\x00")

func _20190217011904_thing_uid_not_nullUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190217011904_thing_uid_not_nullUpSql,
		"20190217011904_thing_uid_not_null.up.sql",
	)
}

func _20190217011904_thing_uid_not_nullUpSql() (*asset, error) {
	bytes, err := _20190217011904_thing_uid_not_nullUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190217011904_thing_uid_not_null.up.sql", size: 51, mode: os.FileMode(0644), modTime: time.Unix(1550366379, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7a, 0xa2, 0x7c, 0x32, 0xa8, 0x30, 0x8f, 0x8, 0xba, 0x86, 0xeb, 0x93, 0xf2, 0xcc, 0xb, 0xa4, 0xd0, 0xf7, 0x7d, 0x2d, 0x7d, 0x2d, 0xe7, 0x65, 0x1f, 0x9b, 0x3a, 0x5d, 0x98, 0x5f, 0xed, 0x57}}
	return a, nil
}

var __20190311125125_add_location_audit_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\x28\xc9\xc8\xcc\x4b\x8f\xcf\xc9\x4f\x4e\x2c\xc9\xcc\xcf\x8b\x4f\x2c\x4d\xc9\x2c\xd1\xd0\x54\x70\x76\x0c\x76\x76\x74\x71\xb5\x06\x04\x00\x00\xff\xff\x68\x85\x71\xa2\x2d\x00\x00\x00")

func _20190311125125_add_location_audit_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190311125125_add_location_audit_tableDownSql,
		"20190311125125_add_location_audit_table.down.sql",
	)
}

func _20190311125125_add_location_audit_tableDownSql() (*asset, error) {
	bytes, err := _20190311125125_add_location_audit_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190311125125_add_location_audit_table.down.sql", size: 45, mode: os.FileMode(0644), modTime: time.Unix(1552312396, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x19, 0x69, 0xca, 0x9d, 0x2b, 0x9b, 0x2d, 0xfd, 0x7c, 0x40, 0x8d, 0xd3, 0x4d, 0x32, 0x8c, 0x41, 0x74, 0x8e, 0x1f, 0x8b, 0x3c, 0xe0, 0xcc, 0xce, 0xd4, 0x97, 0xc, 0x6e, 0x8c, 0x69, 0xdc, 0xc6}}
	return a, nil
}

var __20190311125125_add_location_audit_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xc1\x6e\x9b\x40\x14\xbc\xef\x57\xcc\x21\x52\x8c\x84\xfa\x03\x56\x0f\x9b\xe5\x41\x56\x5d\xef\xa2\xdd\x47\x9d\xf4\x62\xd1\x60\x39\x48\x16\x4e\x03\x69\xd5\xbf\xaf\x16\x82\x53\x57\xf8\xd0\x1b\x68\xe7\xcd\x9b\x37\x33\xca\x93\x64\x02\xcb\x3b\x43\xd0\x39\xac\x63\xd0\x83\x0e\x1c\x70\x3c\x3d\xd5\x43\x7b\xea\x76\x4f\xcf\x75\x77\xd8\xf7\x58\x09\xa0\x6d\x10\xc8\x6b\x69\x50\x7a\xbd\x91\xfe\x11\x5f\xe8\x31\x15\xc0\xf0\xdc\x76\x87\x5d\xdb\x40\x5b\xa6\x82\xfc\xc8\x64\x2b\x63\xe0\x29\x27\x4f\x56\x51\x98\x40\xfd\xaa\x6d\x12\x38\x8b\x8c\x0c\x31\x41\xc9\xa0\x64\x46\x91\xa4\xed\xfa\xfd\xeb\xb0\x6f\x76\xf5\x00\xd6\x1b\x0a\x2c\x37\x25\xb6\x9a\xef\xc7\x5f\x7c\x73\x96\x3e\x88\x33\xca\x65\x65\x18\xd6\x6d\x57\x49\x1c\x7f\x79\xdd\xff\x6c\x4f\x6f\xfd\xee\x78\xea\x0e\xc8\x5c\x15\x8f\x2a\x3d\x29\x1d\xb4\xb3\x97\x88\x7a\x58\x04\x74\xfb\x5f\xcb\xd3\xe7\xb5\x67\xd4\x02\xc3\x19\x24\x92\xb5\x10\xef\xde\x3a\x0f\x4f\xa5\x91\x8a\x90\x57\x56\x71\xc4\x4d\x6e\x9d\x1d\xae\xdf\x9a\x76\x58\x25\xf0\xc4\x95\xb7\x01\xec\x75\x11\x3d\x94\x01\x37\xdf\x4f\xcd\xef\x1b\x71\x47\x85\xb6\x02\x31\xa2\x15\x17\x3b\x57\xe2\x33\x6e\xab\x32\x93\x4c\xb7\x09\xf8\x9e\xe2\xe3\xf4\x6c\x69\xfb\x69\x3c\x41\x07\x64\x3a\xb0\xb6\x8a\x91\x7b\xb7\x81\x33\xd9\xf4\xe2\x3c\x46\x54\x3d\x5c\x01\xd5\xc3\x5f\xa4\x80\xb6\x81\x3c\xc7\x68\xdd\x42\x2d\xe6\xe8\xd3\xcb\x00\xd2\x0b\xb7\xd3\xb3\xb5\xe9\x6c\x5f\xf2\xce\xfe\x55\x9a\x8a\xc2\x24\x3c\xb2\xcc\x32\xd3\x59\x4b\x8a\xf9\xa6\x74\xd6\x9d\xac\xc7\x61\xb2\x19\x74\x1e\xbf\xc9\x04\x12\xff\xa3\xf5\x8a\x9c\x7f\xc5\x2c\x6f\xfe\xd8\x3b\x45\x36\x86\xbe\x16\x64\xb3\xb5\x98\x12\x83\x91\xb6\xa8\x64\x41\x78\x39\xbe\x1c\xfa\x1f\xc7\x8f\x42\xcc\xe9\x2e\x95\x40\xc8\x9c\xc9\xcf\x47\x38\x8f\x29\x63\xcc\x9d\xe9\x05\x90\x3b\x0f\x92\xea\x1e\xde\x6d\xa3\x96\x07\x52\x15\xc7\x16\x3a\x45\x59\xe5\xe9\x4a\xbb\xd6\x7f\x02\x00\x00\xff\xff\xdd\x67\x36\xf0\xec\x03\x00\x00")

func _20190311125125_add_location_audit_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20190311125125_add_location_audit_tableUpSql,
		"20190311125125_add_location_audit_table.up.sql",
	)
}

func _20190311125125_add_location_audit_tableUpSql() (*asset, error) {
	bytes, err := _20190311125125_add_location_audit_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20190311125125_add_location_audit_table.up.sql", size: 1004, mode: os.FileMode(0644), modTime: time.Unix(1552313487, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0x5f, 0x70, 0x8a, 0x88, 0xc6, 0x8e, 0xbb, 0xff, 0x24, 0xa0, 0xee, 0x65, 0xb, 0xc, 0xda, 0x9c, 0xb3, 0x7, 0xd5, 0x18, 0x2a, 0x9b, 0x66, 0x0, 0xf9, 0x31, 0x1d, 0x38, 0x93, 0xc7, 0x56}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"20190204153441_flatten_migrations.down.sql": _20190204153441_flatten_migrationsDownSql,

	"20190204153441_flatten_migrations.up.sql": _20190204153441_flatten_migrationsUpSql,

	"20190207173608_add_unique_serial_to_things.down.sql": _20190207173608_add_unique_serial_to_thingsDownSql,

	"20190207173608_add_unique_serial_to_things.up.sql": _20190207173608_add_unique_serial_to_thingsUpSql,

	"20190207230101_thing_uid_nullable.down.sql": _20190207230101_thing_uid_nullableDownSql,

	"20190207230101_thing_uid_nullable.up.sql": _20190207230101_thing_uid_nullableUpSql,

	"20190207231420_add_location_identifier_to_things.down.sql": _20190207231420_add_location_identifier_to_thingsDownSql,

	"20190207231420_add_location_identifier_to_things.up.sql": _20190207231420_add_location_identifier_to_thingsUpSql,

	"20190207233037_thing_timestamp_types.down.sql": _20190207233037_thing_timestamp_typesDownSql,

	"20190207233037_thing_timestamp_types.up.sql": _20190207233037_thing_timestamp_typesUpSql,

	"20190208003119_remove_thing_not_nullable.down.sql": _20190208003119_remove_thing_not_nullableDownSql,

	"20190208003119_remove_thing_not_nullable.up.sql": _20190208003119_remove_thing_not_nullableUpSql,

	"20190208010946_add_parrot_id_column_to_user.down.sql": _20190208010946_add_parrot_id_column_to_userDownSql,

	"20190208010946_add_parrot_id_column_to_user.up.sql": _20190208010946_add_parrot_id_column_to_userUpSql,

	"20190208140801_prevent_empty_location_id_serial.down.sql": _20190208140801_prevent_empty_location_id_serialDownSql,

	"20190208140801_prevent_empty_location_id_serial.up.sql": _20190208140801_prevent_empty_location_id_serialUpSql,

	"20190209231122_add_indexed_at_to_identities.down.sql": _20190209231122_add_indexed_at_to_identitiesDownSql,

	"20190209231122_add_indexed_at_to_identities.up.sql": _20190209231122_add_indexed_at_to_identitiesUpSql,

	"20190214003216_non_nullable_channel_columns.down.sql": _20190214003216_non_nullable_channel_columnsDownSql,

	"20190214003216_non_nullable_channel_columns.up.sql": _20190214003216_non_nullable_channel_columnsUpSql,

	"20190217011904_thing_uid_not_null.down.sql": _20190217011904_thing_uid_not_nullDownSql,

	"20190217011904_thing_uid_not_null.up.sql": _20190217011904_thing_uid_not_nullUpSql,

	"20190311125125_add_location_audit_table.down.sql": _20190311125125_add_location_audit_tableDownSql,

	"20190311125125_add_location_audit_table.up.sql": _20190311125125_add_location_audit_tableUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"20190204153441_flatten_migrations.down.sql":                &bintree{_20190204153441_flatten_migrationsDownSql, map[string]*bintree{}},
	"20190204153441_flatten_migrations.up.sql":                  &bintree{_20190204153441_flatten_migrationsUpSql, map[string]*bintree{}},
	"20190207173608_add_unique_serial_to_things.down.sql":       &bintree{_20190207173608_add_unique_serial_to_thingsDownSql, map[string]*bintree{}},
	"20190207173608_add_unique_serial_to_things.up.sql":         &bintree{_20190207173608_add_unique_serial_to_thingsUpSql, map[string]*bintree{}},
	"20190207230101_thing_uid_nullable.down.sql":                &bintree{_20190207230101_thing_uid_nullableDownSql, map[string]*bintree{}},
	"20190207230101_thing_uid_nullable.up.sql":                  &bintree{_20190207230101_thing_uid_nullableUpSql, map[string]*bintree{}},
	"20190207231420_add_location_identifier_to_things.down.sql": &bintree{_20190207231420_add_location_identifier_to_thingsDownSql, map[string]*bintree{}},
	"20190207231420_add_location_identifier_to_things.up.sql":   &bintree{_20190207231420_add_location_identifier_to_thingsUpSql, map[string]*bintree{}},
	"20190207233037_thing_timestamp_types.down.sql":             &bintree{_20190207233037_thing_timestamp_typesDownSql, map[string]*bintree{}},
	"20190207233037_thing_timestamp_types.up.sql":               &bintree{_20190207233037_thing_timestamp_typesUpSql, map[string]*bintree{}},
	"20190208003119_remove_thing_not_nullable.down.sql":         &bintree{_20190208003119_remove_thing_not_nullableDownSql, map[string]*bintree{}},
	"20190208003119_remove_thing_not_nullable.up.sql":           &bintree{_20190208003119_remove_thing_not_nullableUpSql, map[string]*bintree{}},
	"20190208010946_add_parrot_id_column_to_user.down.sql":      &bintree{_20190208010946_add_parrot_id_column_to_userDownSql, map[string]*bintree{}},
	"20190208010946_add_parrot_id_column_to_user.up.sql":        &bintree{_20190208010946_add_parrot_id_column_to_userUpSql, map[string]*bintree{}},
	"20190208140801_prevent_empty_location_id_serial.down.sql":  &bintree{_20190208140801_prevent_empty_location_id_serialDownSql, map[string]*bintree{}},
	"20190208140801_prevent_empty_location_id_serial.up.sql":    &bintree{_20190208140801_prevent_empty_location_id_serialUpSql, map[string]*bintree{}},
	"20190209231122_add_indexed_at_to_identities.down.sql":      &bintree{_20190209231122_add_indexed_at_to_identitiesDownSql, map[string]*bintree{}},
	"20190209231122_add_indexed_at_to_identities.up.sql":        &bintree{_20190209231122_add_indexed_at_to_identitiesUpSql, map[string]*bintree{}},
	"20190214003216_non_nullable_channel_columns.down.sql":      &bintree{_20190214003216_non_nullable_channel_columnsDownSql, map[string]*bintree{}},
	"20190214003216_non_nullable_channel_columns.up.sql":        &bintree{_20190214003216_non_nullable_channel_columnsUpSql, map[string]*bintree{}},
	"20190217011904_thing_uid_not_null.down.sql":                &bintree{_20190217011904_thing_uid_not_nullDownSql, map[string]*bintree{}},
	"20190217011904_thing_uid_not_null.up.sql":                  &bintree{_20190217011904_thing_uid_not_nullUpSql, map[string]*bintree{}},
	"20190311125125_add_location_audit_table.down.sql":          &bintree{_20190311125125_add_location_audit_tableDownSql, map[string]*bintree{}},
	"20190311125125_add_location_audit_table.up.sql":            &bintree{_20190311125125_add_location_audit_tableUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
